name: Deploy Hugo site to Service 

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "publish"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify
      - name: Upload public artifact
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: ./public  

  # Deployment job
  deploy:
    environment:
      name: prod 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download public artifact
        uses: actions/download-artifact@v4
        with:
          name: public
          path: public
      - name: gzip files
        shell: bash
        run: |
          gzip --recursive --keep --list --rsyncable --verbose public
      - name: Rsync Deploy
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avr --delete
          remote_host: ${{ secrets.HOST }}
          remote_port: ${{ secrets.PORT }}  
          remote_user: ${{ secrets.USER }}
          remote_key: ${{ secrets.KEY }}
          remote_key_pass: ${{ secrets.PASSPHRASE }}
          path: public/
          remote_path: ${{ secrets.DEPLOY_PATH }}
